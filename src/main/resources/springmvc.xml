<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/mvc
       	http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
        http://www.springframework.org/schema/context
       	http://www.springframework.org/schema/context/spring-context-4.2.xsd">

    <!--自动扫描包，只扫描controller，把包下的@controller注解的类注册为Spring的controller-->
    <context:component-scan base-package="com.charles.controller">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--配置注解驱动：可以自动加载处理器映射器和处理器适配器
        这个标签会自动注册RequestMappingHandlerMapping、RequestMappingHandlerAdapter与ExceptionHandlerExceptionResolver三个bean

        还将提供以下支持：
            支持使用 ConversionService 实例对表单参数进行类型转换；
            支持使用 @NumberFormat annotation、@DateTimeFormat；
            注解完成数据类型的格式化；
            支持使用 @Valid 注解对 JavaBean 实例进行 JSR 303 验证；
            支持使用 @RequestBody 和 @ResponseBody 注解；

        mvc:annotation-driven作用：

            当使用mvc:view-controller标签时一定要加入mvc:annotation-driven，不然会使requestMapping失效。
            当为了处理静态资源问题而加入mvc:default-servlet-handler时，也一定要加入mvc:annotation-driven，不然requestMapping同样会失效。
            当使用自定义类型转换器的时候需要加上mvc:annotation-driven标签。-->
    <mvc:annotation-driven/>

    <!--开通静态资源的访问-->
    <mvc:default-servlet-handler/>

    <!-- 静态资源处理 css js images -->
    <mvc:resources location="/" mapping="*"/>

    <!-- 配置视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 配置逻辑视图的前缀-->
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <!-- 配置逻辑视图的后缀 -->
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--转换器（自定义参数绑定）
    转换器的id要与注解驱动中conversion-service属性内容一致
    &lt;!&ndash; 配置注解驱动 (加上了转换器)&ndash;&gt;
    <mvc:annotation-driven conversion-service="conversionService"/>

    &lt;!&ndash; 转换器的配置(方式1) &ndash;&gt;
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.itykd.converter.DateConverter"/>
            </set>
        </property>
    </bean>
    <!-- 配置全局异常处理器 -->
    <bean id="customHandleException" class="com.itykd.exception.CustomHandleException"/>

    <!-- 配置文件上传解析器:id必须为multipartResolver-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设定默认编码 -->
        <property name="defaultEncoding" value="UTF-8"/>
        <!-- 设置文件上传大小 
             如设定文件上传的最大值为5MB，5*1024*1024 <property name="maxUploadSize" value="5242880"/>
         -->
        <property name="maxUploadSize" value="5242880"/>
    </bean>

    <!-- 配置拦截器 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 所有的请求都进入拦截器 -->
            <mvc:mapping path="/**"/>
            <!-- 配置具体的拦截器 -->
            <bean class="com.itykd.web.interceptor.MyInterceptor1"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>

</beans>